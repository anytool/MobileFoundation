var workspace   = require("ANYWorkspace");
var __rN        = require("ReactNative");
var Base64      = require("Base64");
var Network     = require(10019);
/* d:instance, t:callbacks */
module.exports  = function(d, t) {
    var g = {
        url     : d.__props.url || "",
        method  : {
            READ    : "GET",
            CREATE  : "POST",
            UPDATE  : "PUT",
            DELETE  : "DELETE"
        }[(d.__props.type||"GET").toUpperCase()],
        headers : {
            "Content-Type":{
                json        : "application/json",
                querystring : "application/x-www-form-urlencoded"
            }[(d.__props.format||"querystring").toLowerCase()]
        }
    };
    var responseHandler = function(status, body) {
        // get closest view
        var view = null;
        // get parent
        var parent = d.__caller;
        // find view
        while (!view && parent) {
            // get view
            view = workspace.views[parent.__id];
            parent = parent.__caller;
        }
        // make sure there is at least one instance
        if (view && (d.__props || {}).alias) {
            // setup data container
            workspace.views[view.id].data = workspace.views[view.id].data || {};
            // save data
            workspace.views[view.id].data[d.__props.alias] = body;
        }
        // reload view
        (view || {}).dom ? view.dom.setState({}, function() {
            console.log("[request] checking here: ", status, typeof t[status]);
            // callback
            t[status] && t[status]();
        // callback directly
        }) : t[status] && t[status]();
    };
    // make request
    Network(g, {
        succeeded   : function(res) { responseHandler('succeeded', res) },
        failed      : function(res) { responseHandler('failed', res) }
    });
};